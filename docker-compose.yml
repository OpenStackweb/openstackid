version: "3.7"
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        GITHUB_OAUTH_TOKEN: ${GITHUB_OAUTH_TOKEN}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    image: idp-app
    container_name: idp-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - idp-local-net
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
  redis:
    image: redis:latest
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}
    volumes:
      - /tmp/redis:/root/redis
      - ./docker-compose/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - idp-local-net
    env_file: ./.env
  db:
    image: mysql:8.0
    container_name: idp-db-local
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - "30780:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    volumes:
      - ./docker-compose/mysql/model:/docker-entrypoint-initdb.d
      - /tmp/mysql_idp:/var/lib/mysql
    networks:
      - idp-local-net
    env_file: ./.env
  nginx:
    image: nginx:alpine
    container_name: nginx-idp
    restart: unless-stopped
    ports:
      - 8001:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - idp-local-net
    env_file: ./.env
    depends_on:
      - app
networks:
  idp-local-net:
    driver: bridge